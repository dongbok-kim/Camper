<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.camper.mypage.dao.MyReviewDAO">

	<select id="reviewForm" resultType="mypgReview">
		SELECT cc.ca_idx, cc.ca_name, cc.ca_sido, cc.ca_sigungu, cct.ct_wish_start, cct.ct_wish_end, cct.ct_idx
		FROM cp_crew_together cct 
		JOIN cp_camping cc ON cct.ca_idx = cc.ca_idx 
		WHERE cct.ct_idx = #{param1}
	</select>
	
	<select id="nickname" resultType="String">
		SELECT mb_nickname 
		FROM cp_member WHERE 
		mb_id = #{param1}
	</select>
	
	<insert id="campingReviewWrite" parameterType="hashmap">
		INSERT INTO cp_camping_review(cr_content, cr_assessment, mb_id, ct_idx, ca_idx) 
		VALUES(#{content}, #{assessment}, #{loginId}, #{ct_idx}, #{ca_idx})
	</insert>
	
	<select id="crewList" resultType="mypgReview">
		SELECT cm.mb_nickname, ccc.mb_id, ccc.ct_idx 
		FROM cp_camping_crew ccc, cp_member cm 
		WHERE ct_idx = #{param1} AND ccc.mb_id = cm.mb_id and not ccc.mb_id in (#{param2}) and mb_status = '정상';
	</select>
	
	
	<select id="total" parameterType="hashmap" resultType="int">
		SELECT COUNT(ccr.cr_idx)
		FROM cp_camping_review ccr join cp_camping cc on cc.ca_idx = ccr.ca_idx
		JOIN cp_crew_together cct on ccr.ct_idx = cct.ct_idx 
		WHERE ccr.mb_id = #{loginId} ORDER BY cr_idx DESC
	</select>

	<!-- 캠핑장 후기 목록 -->
	<select id="campingReviewList" parameterType="hashmap" resultType="mypgReview">
		SELECT 
			ccr.cr_idx,
			cc.ca_name, 
			ccr.cr_content, 
			ccr.cr_assessment, 
			cr_datetime, 
			date_format(date_add(cct.ct_end_datetime, interval 30 day),'%Y-%m-%d') as delAble, 
			date_format(now(),'%Y-%m-%d') as today
		FROM cp_camping_review ccr 
		JOIN cp_camping cc ON cc.ca_idx = ccr.ca_idx
		JOIN cp_crew_together cct on ccr.ct_idx = cct.ct_idx 
		WHERE ccr.mb_id = #{loginId} ORDER BY cr_idx DESC
		LIMIT #{amount}
		<if test="skip gt 0">OFFSET #{skip}</if>
	</select>
	
	<delete id="campingReviewDelete">
		DELETE FROM cp_camping_review 
		WHERE cr_idx = #{param1} and mb_id = #{param2}
	</delete>
	
	<!-- 받은 후기 페이징 -->
	<select id="totalR" parameterType="hashmap" resultType="int">
		SELECT COUNT(mr_idx)
		FROM cp_member_review 
		WHERE mb_id = #{loginId}
		ORDER BY mr_idx DESC
	</select>

	<!-- 받은 후기 -->
	<select id="crewReviewR" parameterType="hashmap" resultType="mypgReview">
		SELECT 
			mr_idx, 
			mr_assessment, 
			mr_score, 
			mr_content, 
			mr_datetime, 
			mr_id,
			(select mb_nickname from cp_member cm where mr_id = cm.mb_id) as mb_nickname
		FROM cp_member_review 
		WHERE mb_id = #{loginId}
		ORDER BY mr_idx DESC
		LIMIT #{amount}
		<if test="skip gt 0">OFFSET #{skip}</if>
	</select>
	
	<!-- 작성 후기 페이징 -->
	<select id="totalW" parameterType="hashmap" resultType="int">
		SELECT 
			COUNT(mr_idx) 
		FROM cp_member_review cmr JOIN cp_crew_together cct ON cct.ct_idx = cmr.ct_idx 
		WHERE mr_id = #{loginId}
		ORDER BY mr_idx DESC
	</select>
	
	<!-- 작성 후기 -->
	<select id="crewReviewW" parameterType="hashmap" resultType="mypgReview">
		SELECT 
			mr_idx, 
			mr_assessment, 
			mr_score, 
			mr_content, 
			mr_datetime, 
			cmr.mb_id, 
			(select mb_nickname from cp_member cm where cmr.mb_id = cm.mb_id) as mb_nickname, 
			date_format(date_add(ct_end_datetime, interval 30 day),'%Y-%m-%d') as delAble, 
			date_format(now(),'%Y-%m-%d') as today 
		FROM cp_member_review cmr JOIN cp_crew_together cct ON cct.ct_idx = cmr.ct_idx 
		WHERE mr_id = #{loginId}
		ORDER BY mr_idx DESC
		LIMIT #{amount}
		<if test="skip gt 0">OFFSET #{skip}</if>
	</select>
	
	<!-- 크루 후기 작성 -->
	<insert id="crewReview">
		INSERT INTO cp_member_review(mr_assessment, mr_score, mr_content, mr_datetime, mr_id, mb_id, ct_idx) 
		VALUES(#{param1}, #{param2}, #{param3}, now(), #{param4}, #{param5}, #{param6})
	</insert>
	
	<!-- 크루 후기 삭제 -->
	<delete id="crewReviewDelete">
		DELETE FROM cp_member_review WHERE mr_idx = #{param1} and mr_id = #{param2}
	</delete>
	
	<!-- 회원 모닥불온도 업데이트 -->
	<update id="memberUpdate">
		UPDATE cp_member 
		SET mb_fire = (SELECT ROUND(SUM(mr_score)/COUNT(mr_idx)) 
								FROM cp_member_review cmr 
								WHERE mb_id = #{param1})
		WHERE mb_id = #{param1}
	</update>
	
	<!-- 타이틀 목록 가져오기 -->
	<select id="getTitle" resultType="admTitle">
		SELECT mt_idx FROM cp_member_title order by mt_degree, mt_count;
	</select>
	
	<!-- 타이틀 업데이트 -->
	<update id="titleUpdate">
		UPDATE cp_member cm SET mt_idx = #{param1}
		WHERE mb_id = #{param2} and mb_fire >= (SELECT mt_degree FROM cp_member_title cmt WHERE mt_idx = #{param1})
		AND (SELECT count(ct_idx) FROM cp_crew_together cct WHERE cct.mb_id = cm.mb_id) >= (SELECT mt_count FROM cp_member_title cmt WHERE mt_idx = #{param1})
	</update>
	
	<!-- 삭제 리뷰 대상 아이디 찾기 -->
	<select id="getId" resultType="String">
		SELECT mb_id FROM cp_member_review WHERE mr_idx = #{param1} and mr_id = #{param2}
	</select>
	
	<!-- 유효성 체크 -->
	<select id="chk" resultType="String">
		SELECT cc_is_join  
		FROM cp_camping_crew 
		WHERE ct_idx = #{param1} and mb_id = #{param2}
	</select>
	
	<select id="delAble" resultType="mypgReview">
		SELECT ccr.cr_idx, date_format(date_add(ct_end_datetime, interval 30 day),'%Y-%m-%d') as delAble, date_format(now(),'%Y-%m-%d') as today
		FROM cp_camping_review ccr 
		join cp_camping cc on cc.ca_idx = ccr.ca_idx
		join cp_crew_together cct ON cct.ct_idx = ccr.ct_idx 
		WHERE ccr.cr_idx = #{param1} AND ccr.mb_id = #{param2}
	</select>
	
</mapper>